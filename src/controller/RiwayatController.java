package controller;

import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import java.io.File;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import javafx.animation.Animation;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.scene.control.Label;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.util.Duration;
import model.Registrasi;
import model.RegistrasiDAO;
import model.User;
import util.CsvUtil;
import util.Sesi;
import util.ViewFactory;
import javafx.scene.control.TableColumn;

public class RiwayatController {
	@FXML
	private Button HomeButton;
	@FXML
	private Button logoutButton;
	@FXML
	private Button RegistButton;
	@FXML
	private Button RiwayatButton;
	@FXML
	private Button convertButton;
	@FXML
	private Label dateLabel;
	@FXML
	private Label timeLabel;
	@FXML
	private Label userLabel;
	@FXML
	private Label namaLabel;
	@FXML
	private Label umurLabel;
	@FXML
	private Label kelasLabel;
	@FXML
	private TableView<Registrasi> riwayatTable;
	@FXML
	private TableColumn<Registrasi, String> tanggalColumn;
	@FXML
	private TableColumn<Registrasi, String> jamColumn;
	@FXML
	private TableColumn<Registrasi, String> keluhanColumn;
	
	private ObservableList<Registrasi> riwayatList = FXCollections.observableArrayList();
	// Event Listener on Button[#HomeButton].onAction
	@FXML
	public void homeView(ActionEvent event) {
		// TODO Autogenerated
		Parent homeViewParent = ViewFactory.loadView("/view/HomeView.fxml");
        if (homeViewParent != null) {
            Scene homeViewScene = new Scene(homeViewParent);
            Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();
            window.setScene(homeViewScene);
            window.show();
        }
	}
	// Event Listener on Button[#logoutButton].onAction
	@FXML
	public void logout(ActionEvent event) {
		// TODO Autogenerated
		// Clear the session
		Sesi.clear();
        // Navigate to the login view
        Parent loginViewParent = ViewFactory.loadView("/view/LoginView.fxml");
        if (loginViewParent != null) {
            Scene homeViewScene = new Scene(loginViewParent);
            Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();
            window.setScene(homeViewScene);
            window.show();
        }
	}
	// Event Listener on Button[#RegistButton].onAction
	@FXML
	public void registView(ActionEvent event) {
		// TODO Autogenerated
		Parent registViewParent = ViewFactory.loadView("/view/RegistView.fxml");
        if (registViewParent != null) {
            Scene homeViewScene = new Scene(registViewParent);
            Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();
            window.setScene(homeViewScene);
            window.show();
        }
	}
	// Event Listener on Button[#RiwayatButton].onAction
	@FXML
	public void riwayatView(ActionEvent event) {
		// TODO Autogenerated
		Parent riwayatViewParent = ViewFactory.loadView("/view/RiwayatView.fxml");
        if (riwayatViewParent != null) {
            Scene homeViewScene = new Scene(riwayatViewParent);
            Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();
            window.setScene(homeViewScene);
            window.show();
        }
	}
	
	@FXML
	private void convertCSV() {
		FileChooser fileChooser = new FileChooser();
        fileChooser.setTitle("Save CSV File");
        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("CSV Files", "*.csv"));
        File file = fileChooser.showSaveDialog(riwayatTable.getScene().getWindow());

        if (file != null) {
            List<Registrasi> registrasiList = riwayatTable.getItems();
            CsvUtil.writeToCsv(registrasiList, file.getAbsolutePath());
        }
	}
	
	public void initialize() {
        updateDateTimeLabels();
        Timeline timeline = new Timeline(
                new KeyFrame(Duration.seconds(1), event -> updateDateTimeLabels())
        );
        timeline.setCycleCount(Animation.INDEFINITE);
        timeline.play();

        User currentUser = Sesi.getCurrentUser();
        if (currentUser != null) { 
            loadUserData(currentUser.getNim());
            loadRegistData(currentUser.getNim()); 
            userLabel.setText(currentUser.getNim());
        } 

        tanggalColumn.setCellValueFactory(new PropertyValueFactory<>("tanggal"));
        jamColumn.setCellValueFactory(new PropertyValueFactory<>("jam"));
        keluhanColumn.setCellValueFactory(new PropertyValueFactory<>("keluhan"));
        riwayatTable.setItems(riwayatList);
    }
	
	private void loadUserData(String nim) {
        RegistrasiDAO registDAO = new RegistrasiDAO();
        Registrasi userData = registDAO.getUserData(nim);
        if (userData != null) {
            namaLabel.setText("Nama : " + userData.getNama());
            umurLabel.setText("Umur  : " + String.valueOf(userData.getUmur()));
            kelasLabel.setText("Kelas : " + userData.getKelas());
        }
    }
	
	private void loadRegistData(String nim) {
        // Mengambil data riwayat dari database (menggunakan RegistDAO)
        RegistrasiDAO registDAO = new RegistrasiDAO();
        riwayatList.setAll(registDAO.getRegistrasiByNim(nim));
    }

    private void updateDateTimeLabels() {
        dateLabel.setText("Tanggal : " + LocalDate.now());
        timeLabel.setText("Jam       : " + LocalTime.now().toString().substring(0, 8));
    }
}
